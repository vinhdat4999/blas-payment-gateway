name: build and release

on:
  push:
    branches: [ main ]

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          server-id: github

      - name: Install xmllint tool
        shell: bash
        continue-on-error: true
        run: |
          sudo apt-get clean
          sudo apt-get install -f
          sudo dpkg --configure -a
          sudo apt-get update
          sudo apt-get install libxml2-utils

      - name: Extract service name pom.xml
        id: extractName
        run: |
          serviceName=$(xmllint --xpath '/*[local-name()="project"]/*[local-name()="artifactId"]/text()' pom.xml)
          echo "serviceName=$serviceName"
          echo "serviceName=$serviceName" >> $GITHUB_OUTPUT

      - name: Extract release version from pom.xml
        id: extractVersion
        run: |
          serviceVersion=$(xmllint --xpath '/*[local-name()="project"]/*[local-name()="version"]/text()' pom.xml | sed "s/-SNAPSHOT//")
          echo "serviceVersion=$serviceVersion"
          echo "serviceVersion=$serviceVersion" >> $GITHUB_OUTPUT

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn -B package --file pom.xml
        env:
          GITHUB_ACTOR: ${{ env.GITHUB_ACTOR }}
          GITHUB_TOKEN: ${{ secrets.PACKAGE }}

      #      - name: Publish to GitHub Packages Apache Maven
      #        run: mvn deploy
      #        env:
      #          GITHUB_ACTOR: ${{ env.GITHUB_ACTOR }}
      #          GITHUB_TOKEN: ${{ secrets.PACKAGE }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.extractName.outputs.serviceName }}:${{ steps.extractVersion.outputs.serviceVersion }}

      - name: Logout from Docker Hub
        run: docker logout
